name: build
on:
  pull_request: {}
  workflow_dispatch: {}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pdo, sqlite, pdo_sqlite, gd
          coverage: none
      - name: Install composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
      - name: Prepare Laravel Application
        run: |
          cp .env.ci .env
          php artisan key:generate
      - name: Run Pint
        run: ./vendor/bin/pint
      - name: Run PHP CodeSniffer
        run: ./vendor/bin/phpcs --standard=PSR12 app/
      - name: Run Static Analysis
        run: ./vendor/bin/phpstan analyze --error-format=github
      - name: Run tests
        run: php artisan test
  code_review:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v3.0.0
        env:
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}